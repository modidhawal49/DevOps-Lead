apiVersion: v1
kind: Namespace
metadata:
  name: my-app-namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-deployment
  namespace: my-app-namespace
  labels:
    app: my-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-app
        image: nginx:latest
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cache-deployment
  namespace: my-app-namespace
  labels:
    app: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cache
  template:
    metadata:
      labels:
        app: cache
    spec:
      containers:
      - name: cache
        image: redis:latest
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
  namespace: my-app-namespace
spec:
  selector:
    app: my-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-app-network-policy
  namespace: my-app-namespace
spec:
  # Select pods with label "app: my-app" (i.e. my-app-deployment pods)
  podSelector:
    matchLabels:
      app: my-app
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from:
  # 1. All pods in the same namespace.
  # 2. Any pod (in any namespace) with the label "app: trusted".
  - from:
    - podSelector: {}  # All pods in the same namespace
    - namespaceSelector: {}  # All namespacesâ€¦
      podSelector:
        matchLabels:
          app: trusted
  egress:
  # Allow egress only to pods in the same namespace.
  - to:
    - podSelector: {}  # All pods in the same namespace
